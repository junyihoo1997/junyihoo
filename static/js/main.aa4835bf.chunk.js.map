{"version":3,"sources":["components/Main/Main.js","components/About/About.js","components/Skills/Skills.js","components/Experiences/Experiences.js","components/Education/Education.js","components/Contact/Contact.js","components/Footer/Footer.js","components/Navbar/Navbar.js","pages/LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","useState","setObfuscate","setUpdate","useEffect","setInterval","className","id","About","Skills","Experiences","Education","Contact","Footer","Navbar","navClick","logo","about","skills","experiences","education","contact","navContent","href","data-text","LandingPage","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yaAuDeA,MAhDf,SAAcC,GAAQ,IAAD,EACiBC,oBAAS,GAD1B,mBACCC,GADD,aAEWD,oBAAS,GAFpB,mBAEFE,GAFE,WAoBjB,OAfAC,qBAAU,WACNC,aAAY,WACRH,GAAa,GACbC,GAAU,GAIVD,GAAa,GACbC,GAAU,KAHX,QAWH,yBAAKG,UAAU,YAAYC,GAAG,gBAC1B,yBAAKD,UAAU,gBACX,yBAAKA,UAAU,iBACX,iDAEI,6BAFJ,+B,OCpBLE,MARf,SAAeR,GACX,OACI,yBAAKM,UAAU,uBAAuBC,GAAG,iBAAzC,U,OCQOE,MARf,SAAgBT,GACZ,OACI,yBAAKM,UAAU,wBAAwBC,GAAG,kBAA1C,W,OCIOG,MARf,SAAqBV,GACjB,OACI,yBAAKM,UAAU,6BAA6BC,GAAG,uBAA/C,gB,OCQOI,MARf,SAAmBX,GACf,OACI,yBAAKM,UAAU,2BAA2BC,GAAG,qBAA7C,c,OCMOK,MARf,SAAiBZ,GACb,OACI,yBAAKM,UAAU,yBAAyBC,GAAG,mBAA3C,Y,OCIOM,MARf,SAAgBb,GACZ,OACI,yBAAKM,UAAU,eAAf,W,OCoCOQ,MAjCf,SAAgBd,GAAQ,IAAD,EACaC,oBAAS,GADtB,mBACZc,EADY,aAGiBd,mBAAS,CACzCe,KAAM,aACNC,MAAO,aACPC,OAAQ,cACRC,YAAa,mBACbC,UAAW,iBACXC,QAAS,kBATM,mBAGZC,EAHY,KAYnB,GAZmB,MAYF,IAAbP,EACA,OACI,yBAAKT,UAAU,eACX,wBAAIA,UAAU,UAGV,wBAAIA,UAAU,UAAS,uBAAGiB,KAAK,iBAAiBC,YAAU,QAAQlB,UAAU,SAASgB,EAAWL,QAChG,wBAAIX,UAAU,UAAS,uBAAGiB,KAAK,kBAAkBC,YAAU,SAASlB,UAAU,SAASgB,EAAWJ,SAClG,wBAAIZ,UAAU,UAAS,uBAAGiB,KAAK,uBAAuBC,YAAU,cAAclB,UAAU,SAASgB,EAAWH,cAC5G,wBAAIb,UAAU,UAAS,uBAAGiB,KAAK,qBAAqBC,YAAU,YAAYlB,UAAU,SAASgB,EAAWF,YACxG,wBAAId,UAAU,UAAS,uBAAGiB,KAAK,mBAAmBC,YAAU,UAAUlB,UAAU,SAASgB,EAAWD,aCMzGI,G,wLAhBP,OACI,yBAAKnB,UAAU,gBAEX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAZUoB,cCHXC,MARf,WACE,OACE,yBAAKrB,UAAU,OACX,kBAAC,EAAD,QCEYsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.aa4835bf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Baffle from \"baffle-react\";\r\n\r\n\r\n// Styling import\r\nimport './Main.scss'\r\n\r\nfunction Main(props) {\r\n    const [obfuscate, setObfuscate] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    var title = [\"Software Engineer\", \"Cloud Engineer\", \"Web Developer\"]\r\n\r\n    useEffect(() => {\r\n        setInterval(function () {\r\n            setObfuscate(false)\r\n            setUpdate(false)\r\n            setTime()\r\n        }, 3000);\r\n        function setTime() {\r\n            setObfuscate(true)\r\n            setUpdate(true)\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className='main-body' id='main-section'>\r\n            <div className=\"main-opacity\">\r\n                <div className=\"main-content \">\r\n                    <h1>\r\n                        Hi, I'm Hoo Jun Yi\r\n                        <br />\r\n                        I'm a software engineer\r\n                        {/* I am a <Baffle\r\n                            speed={50}\r\n                            characters=\"!@#$%^&*\"\r\n                            exclude={[\" \", \"!\"]}\r\n                            obfuscate={obfuscate}\r\n                            update={update}\r\n                            revealDuration={1000}\r\n                            revealDelay={3}\r\n                        >\r\n                            {title[Math.floor(Math.random() * title.length)]}\r\n                        </Baffle> */}\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './About.scss'\r\n\r\nfunction About(props) {\r\n    return (\r\n        <div className='container about-body' id='about-section'>\r\n            About\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\n// Styling import\r\nimport './Skills.scss'\r\n\r\nfunction Skills(props) {\r\n    return (\r\n        <div className=\"container skills-body\" id='skills-section'>\r\n            Skills\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport './Experiences.scss'\r\n\r\nfunction Experiences(props) {\r\n    return (\r\n        <div className='container experiences-body' id='experiences-section'>\r\n            Experiences\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Experiences;","import React from 'react';\r\n\r\n// Styling import\r\nimport './Education.scss'\r\n\r\nfunction Education(props) {\r\n    return (\r\n        <div className='education-body container' id='education-section'>\r\n            Education\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\n\r\n// Styling import\r\nimport './Contact.scss'\r\n\r\nfunction Contact(props) {\r\n    return (\r\n        <div className=\"container contact-body\" id='contact-section'>\r\n            Contact\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer-body\">\r\n            Footer\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n// Styling Import\r\nimport './Navbar.scss'\r\n\r\n\r\nfunction Navbar(props) {\r\n    const [navClick, setNavClick] = useState(true);\r\n    const toggleTrueFalse = () => setNavClick(!navClick);\r\n    const [navContent, setNavContent] = useState({\r\n        logo: \"HOO JUN YI\",\r\n        about: \"< ABOUT />\",\r\n        skills: \"< SKILLS />\",\r\n        experiences: \"< EXPERIENCES />\",\r\n        education: \"< EDUCATION />\",\r\n        contact: \"< CONTACT />\"\r\n    })\r\n\r\n    if (navClick === true) {\r\n        return (\r\n            <div className=\"navbar-body\">\r\n                <ul className=\"nav-ul\">\r\n                    {/* <li className=\"nav-li\" id='nav-logo'><a href='#main-section' data-text=\"HOO JUN YI\" className=\"nav-a\">{navContent.logo}</a></li> */}\r\n\r\n                    <li className=\"nav-li\"><a href='#about-section' data-text=\"About\" className=\"nav-a\">{navContent.about}</a></li>\r\n                    <li className=\"nav-li\"><a href='#skills-section' data-text=\"Skills\" className=\"nav-a\">{navContent.skills}</a></li>\r\n                    <li className=\"nav-li\"><a href='#experiences-section' data-text=\"Experiences\" className=\"nav-a\">{navContent.experiences}</a></li>\r\n                    <li className=\"nav-li\"><a href='#education-section' data-text=\"Education\" className=\"nav-a\">{navContent.education}</a></li>\r\n                    <li className=\"nav-li\"><a href='#contact-section' data-text=\"Contact\" className=\"nav-a\">{navContent.contact}</a></li>\r\n\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\n// Component import\r\nimport Main from '../../components/Main/Main'\r\nimport About from '../../components/About/About'\r\nimport Skills from '../../components/Skills/Skills'\r\nimport Experiences from '../../components/Experiences/Experiences'\r\nimport Education from '../../components/Education/Education'\r\nimport Contact from '../../components/Contact/Contact'\r\nimport Footer from '../../components/Footer/Footer'\r\nimport Navbar from '../../components/Navbar/Navbar'\r\n\r\n// import PreLoading from '../../components/PreLoading/PreLoading'\r\n\r\n// Styling import\r\nimport './LandingPage.scss'\r\n\r\n\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing-body\">\r\n                {/* <PreLoading/> */}\r\n                <Navbar />\r\n                <Main />\r\n                <About />\r\n                <Skills />\r\n                <Experiences />\r\n                <Education />\r\n                <Contact />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport './App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Page import\r\nimport LandingPage from './pages/LandingPage/LandingPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <LandingPage/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}